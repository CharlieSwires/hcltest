{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\charl\\\\eclipse-workspace\\\\hcltest\\\\src\\\\main\\\\code\\\\hcl-app\\\\src\\\\components\\\\middle\\\\Middle.js\";\nimport './Middle.css';\nimport React, { Component } from 'react';\n\nclass Middle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.myChangeHandlero1 = event => {\n      this.setState({\n        o1: event.target.value\n      });\n      console.log('o1=' + this.state.o1);\n    };\n\n    this.myChangeHandlero2 = event => {\n      this.setState({\n        o2: event.target.value\n      });\n      console.log('o2=' + this.state.o2);\n    };\n\n    this.state = {\n      count: null,\n      o1: null,\n      o2: null\n    };\n    this.fetchAdd = this.fetchAdd.bind(this);\n  }\n\n  fetchAnything(s1) {\n    const testURL = 'http://localhost:8080/hcl/' + s1 + '/' + this.state.o1 + '/' + this.state.o2;\n    console.log(\"testURL\", testURL);\n    const myInit = {\n      method: 'GET',\n      mode: 'no-cors',\n      headers: {}\n    };\n    const myRequest = new Request(testURL, myInit);\n    fetch(myRequest).then(response => {\n      console.log(\"response\", response);\n      console.log(\"response.data\", response.data);\n      console.log(\"response.count\", response.count);\n      this.setState({\n        count: response.count\n      });\n      console.log(\"count\", this.state.count);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  fetchAdd() {\n    fetchAnything('add');\n  }\n\n  fetchSubtract() {\n    fetchAnything('subtract');\n  }\n\n  fetchMultiply() {\n    fetchAnything('multiply');\n  }\n\n  fetchDivide() {\n    fetchAnything('divide');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"add  \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: this.myChangeHandlero1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), \" to\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: this.myChangeHandlero2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), \" = \", this.state.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.fetchAdd,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"subtract  \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: this.myChangeHandlero1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 22\n        }, this), \" to\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: this.myChangeHandlero2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), \" = \", this.state.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.fetchSubtract,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"multiply  \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: this.myChangeHandlero1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 22\n        }, this), \" to\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: this.myChangeHandlero2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), \" = \", this.state.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.fetchMultiply,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"divide \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: this.myChangeHandlero1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }, this), \" to\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: this.myChangeHandlero2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), \" = \", this.state.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.fetchDivide,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Middle;","map":{"version":3,"sources":["C:/Users/charl/eclipse-workspace/hcltest/src/main/code/hcl-app/src/components/middle/Middle.js"],"names":["React","Component","Middle","constructor","props","myChangeHandlero1","event","setState","o1","target","value","console","log","state","myChangeHandlero2","o2","count","fetchAdd","bind","fetchAnything","s1","testURL","myInit","method","mode","headers","myRequest","Request","fetch","then","response","data","catch","error","fetchSubtract","fetchMultiply","fetchDivide","render"],"mappings":";;AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAsDnBC,iBAtDmB,GAsDEC,KAAD,IAAW;AAC7B,WAAKC,QAAL,CAAc;AAACC,QAAAA,EAAE,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAAlB,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAM,KAAKC,KAAL,CAAWL,EAA7B;AACD,KAzDkB;;AAAA,SA0DnBM,iBA1DmB,GA0DER,KAAD,IAAW;AAC7B,WAAKC,QAAL,CAAc;AAACQ,QAAAA,EAAE,EAAET,KAAK,CAACG,MAAN,CAAaC;AAAlB,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAM,KAAKC,KAAL,CAAWE,EAA7B;AACD,KA7DkB;;AAEjB,SAAKF,KAAL,GACE;AACEG,MAAAA,KAAK,EAAE,IADT;AAEER,MAAAA,EAAE,EAAC,IAFL;AAGEO,MAAAA,EAAE,EAAC;AAHL,KADF;AAOA,SAAKE,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAGDC,EAAAA,aAAa,CAACC,EAAD,EAAK;AAChB,UAAMC,OAAO,GAAG,+BAA6BD,EAA7B,GAAgC,GAAhC,GAAoC,KAAKP,KAAL,CAAWL,EAA/C,GAAkD,GAAlD,GAAsD,KAAKK,KAAL,CAAWE,EAAjF;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBS,OAAvB;AAEA,UAAMC,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE,KADK;AAEXC,MAAAA,IAAI,EAAE,SAFK;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAf;AAOA,UAAMC,SAAS,GAAG,IAAIC,OAAJ,CAAYN,OAAZ,EAAqBC,MAArB,CAAlB;AACIM,IAAAA,KAAK,CAACF,SAAD,CAAL,CACGG,IADH,CACUC,QAAD,IAAc;AACnBnB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBkB,QAAxB;AACAnB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BkB,QAAQ,CAACC,IAAtC;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BkB,QAAQ,CAACd,KAAvC;AACA,WAAKT,QAAL,CAAc;AACZS,QAAAA,KAAK,EAAEc,QAAQ,CAACd;AADJ,OAAd;AAGAL,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKC,KAAL,CAAWG,KAAhC;AACD,KATH,EAUGgB,KAVH,CAUWC,KAAD,IAAW;AACjBtB,MAAAA,OAAO,CAACC,GAAR,CAAYqB,KAAZ;AACD,KAZH;AAcH;;AAEDhB,EAAAA,QAAQ,GAAG;AACTE,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD;;AACDe,EAAAA,aAAa,GAAG;AACdf,IAAAA,aAAa,CAAC,UAAD,CAAb;AACD;;AACDgB,EAAAA,aAAa,GAAE;AACbhB,IAAAA,aAAa,CAAC,UAAD,CAAb;AACD;;AACDiB,EAAAA,WAAW,GAAG;AACZjB,IAAAA,aAAa,CAAC,QAAD,CAAb;AACD;;AAUPkB,EAAAA,MAAM,GAAG;AAEL,wBACE;AAAA,8BACE;AAAA,yCAAQ;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAE,KAAKhC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAAR,sBACA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAE,KAAKS;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADA,SAC2D,KAAKD,KAAL,CAAWG,KADtE;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAQ,QAAA,OAAO,EAAE,KAAKC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAA,8CAAa;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAE,KAAKZ;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAAb,sBACA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAE,KAAKS;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADA,SAC2D,KAAKD,KAAL,CAAWG,KADtE;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAQE;AAAQ,QAAA,OAAO,EAAE,KAAKkB,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAWE;AAAA,8CAAa;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAE,KAAK7B;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAAb,sBACA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAE,KAAKS;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADA,SAC2D,KAAKD,KAAL,CAAWG,KADtE;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAaE;AAAQ,QAAA,OAAO,EAAE,KAAKmB,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAgBE;AAAA,2CAAU;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAE,KAAK9B;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAAV,sBACA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAE,KAAKS;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADA,SAC2D,KAAKD,KAAL,CAAWG,KADtE;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eAkBE;AAAQ,QAAA,OAAO,EAAE,KAAKoB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;;AAzF4B;;AA2F7B,eAAelC,MAAf","sourcesContent":["import './Middle.css';\r\nimport React, { Component } from 'react';\r\n\r\nclass Middle extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = \r\n        {\r\n          count: null,\r\n          o1:null,\r\n          o2:null\r\n        };\r\n      \r\n      this.fetchAdd = this.fetchAdd.bind(this);\r\n    }\r\n  \r\n\r\n    fetchAnything(s1) {\r\n      const testURL = 'http://localhost:8080/hcl/'+s1+'/'+this.state.o1+'/'+this.state.o2;\r\n      console.log(\"testURL\", testURL);\r\n  \r\n      const myInit = {\r\n        method: 'GET',\r\n          mode: 'no-cors',\r\n          headers: {\r\n          }\r\n      };\r\n  \r\n      const myRequest = new Request(testURL, myInit);\r\n          fetch(myRequest)\r\n            .then( (response) => {\r\n              console.log(\"response\", response);\r\n              console.log(\"response.data\", response.data);\r\n              console.log(\"response.count\", response.count);\r\n              this.setState({\r\n                count: response.count\r\n              });\r\n              console.log(\"count\", this.state.count)\r\n            })\r\n            .catch( (error) => {\r\n              console.log(error)\r\n            });\r\n          \r\n      }\r\n \r\n      fetchAdd() {\r\n        fetchAnything('add');\r\n      }\r\n      fetchSubtract() {\r\n        fetchAnything('subtract');\r\n      }\r\n      fetchMultiply(){\r\n        fetchAnything('multiply');\r\n      }\r\n      fetchDivide() {\r\n        fetchAnything('divide');\r\n      }\r\n      \r\n    myChangeHandlero1 = (event) => {\r\n      this.setState({o1: event.target.value});\r\n      console.log('o1='+this.state.o1)\r\n    }\r\n    myChangeHandlero2 = (event) => {\r\n      this.setState({o2: event.target.value});\r\n      console.log('o2='+this.state.o2)\r\n    }\r\nrender() {\r\n   \r\n    return (\r\n      <div>\r\n        <p>add  <input type='text' onChange={this.myChangeHandlero1} /> to \r\n        <input type='text' onChange={this.myChangeHandlero2} /> = {this.state.count}</p>\r\n        <button onClick={this.fetchAdd}>\r\n          Click me\r\n        </button>     \r\n        <p>subtract  <input type='text' onChange={this.myChangeHandlero1} /> to \r\n        <input type='text' onChange={this.myChangeHandlero2} /> = {this.state.count}</p>\r\n        <button onClick={this.fetchSubtract}>\r\n          Click me\r\n        </button>     \r\n        <p>multiply  <input type='text' onChange={this.myChangeHandlero1} /> to \r\n        <input type='text' onChange={this.myChangeHandlero2} /> = {this.state.count}</p>\r\n        <button onClick={this.fetchMultiply}>\r\n          Click me\r\n        </button>     \r\n        <p>divide <input type='text' onChange={this.myChangeHandlero1} /> to \r\n        <input type='text' onChange={this.myChangeHandlero2} /> = {this.state.count}</p>\r\n        <button onClick={this.fetchDivide}>\r\n          Click me\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  export default Middle;\r\n"]},"metadata":{},"sourceType":"module"}